class Solution:
    def myAtoi(self, s: str) -> int:
        INT_MAX = 2 ** 31 - 1
        INT_MIN = - 2 ** 31
        sign = 1
        result = 0
        ls = ['0','1','2','3','4','5','6','7','8','9']
        num_sign = {'+':1, '-':-1}
        n = len(s)
        if n == 0:
            return 0
        i = 0
        while i < n and s[i] == ' ':
            i += 1
        if i < n and s[i] in num_sign:
            sign = num_sign[s[i]]
            i += 1
            
        while i < n and (s[i] in ls):
            if (result > INT_MAX // 10) or ((result == INT_MAX // 10) and int(s[i]) > INT_MAX % 10):
                return INT_MAX
            if (result < int(INT_MIN / 10)) or ((result == int(INT_MIN / 10)) and int(s[i]) > -INT_MIN % 10):
                return INT_MIN
            result = result * 10 + sign * int(s[i])
            i += 1
        return result
